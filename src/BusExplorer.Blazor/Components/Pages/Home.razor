@page "/"
@using BusExplorer.Data.Models
@inject IHttpClientFactory HttpClientFactory

@code {
    private HttpClient _httpClient;
    private ServiceBusConnection? selectedConnection;

    protected override void OnInitialized()
    {
        _httpClient = HttpClientFactory.CreateClient("BusExplorer");
    }
}


<PageTitle>Home</PageTitle>

<h1>Service Bus Explorer</h1>                                                                                                             
                                                                                                                                            
 @if (selectedConnection != null)
 {
     <h2>Selected Connection: @selectedConnection.Name</h2>
     <p>Connection String: @selectedConnection.ConnectionString</p>
 }

 <h2>Available Connections</h2>

@if (connections == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <select @onchange="OnConnectionSelected">
        <option value="">-- Select a Connection --</option>
        @foreach (var connection in connections)
        {
            <option value="@connection.Id">@connection.Name</option>
        }
    </select>
}

<hr />

<h2>Add New Connection</h2>

<EditForm Model="@newConnection" FormName="AddConnections" OnValidSubmit="@AddConnection">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        <label>Name:</label>
        <InputText @bind-Value="newConnection.Name" />
    </p>
    <p>
        <label>Connection String:</label>
        <InputText @bind-Value="newConnection.ConnectionString" />
    </p>

    <button class="btn-primary" type="submit">Add</button>
</EditForm>

@code {
    private ServiceBusConnection[]? connections;
    private ServiceBusConnection newConnection = new();

    protected override async Task OnInitializedAsync()
    {
        connections = await _httpClient.GetFromJsonAsync<ServiceBusConnection[]>("ServiceBusConnections");
    }

    private async Task AddConnection()
    {
        await _httpClient.PostAsJsonAsync("ServiceBusConnections", newConnection);
        newConnection = new();
        await OnInitializedAsync();
    }

    private void OnConnectionSelected(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int connectionId))
        {
            selectedConnection = connections?.FirstOrDefault(c => c.Id == connectionId);
        }
        else
        {
            selectedConnection = null;
        }

        StateHasChanged();
    }

}
